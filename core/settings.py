"""
Django settings for core project.

Generated by 'django-admin startproject' using Django 5.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path

import os
from dotenv import load_dotenv

load_dotenv() # Charge les variables du fichier .env

GOOGLE_API_KEY = os.getenv("GOOGLE_API_KEY")

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-*3_h60x+od$)_d^8ab9#md-q8fyat7c^*mmb*^9@e*whn$ibr@'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    
    # Applications tierces pour Django REST Framework
    'rest_framework',
    'rest_framework.authtoken', # Nécessaire pour l'authentification par Token

    'rest_framework_simplejwt', # ADDED: Pour l'authentification JWT    'apps.users',
    
    
    # Applications personnalisées 
    'apps.users',
   
    'apps.ai_app',
    'apps.postes',
    
    'apps.employees',    
    'apps.recruitment',
    'apps.stage',
    
    
    # 'apps.',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'core.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'core.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]



# my_project/settings.py

# ... (vos configurations existantes)

# INSTALLED_APPS = [
#     # Applications Django par défaut
#     'django.contrib.admin',
#     'django.contrib.auth',
#     'django.contrib.contenttypes',
#     'django.contrib.sessions',
#     'django.contrib.messages',
#     'django.contrib.staticfiles',

#     # Applications tierces pour Django REST Framework
#     'rest_framework',
#     # 'rest_framework.authtoken', # REMOVED: Plus nécessaire avec simplejwt
#     'rest_framework_simplejwt', # ADDED: Pour l'authentification JWT

#     # Vos applications personnalisées (l'ordre peut être important pour les dépendances)
#     'users',       # Doit être avant 'employees' et 'stage' car ils dépendent de User
#     'departement', # Doit être avant 'postes' et 'recruitment'
#     'postes',
#     'employees',
#     'stage',
#     'recruitment',
# ]

# ... (autres configurations)

# Spécifiez votre modèle d'utilisateur personnalisé
AUTH_USER_MODEL = 'users.User'

# Configuration de Django REST Framework
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.SessionAuthentication', # Permet l'authentification basée sur les sessions (utile pour l'interface navigable de l'API)
        'rest_framework_simplejwt.authentication.JWTAuthentication', # UPDATED: Utilise l'authentification JWT
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated', # Par défaut, toutes les vues nécessitent une authentification. Les exceptions seront gérées par les permissions personnalisées.
    ],
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination', # Active la pagination par défaut
    'PAGE_SIZE': 10, # Nombre d'éléments par page par défaut pour la pagination
    'DEFAULT_FILTER_BACKENDS': [
        'rest_framework.filters.SearchFilter',   # Permet la recherche via le paramètre 'search'
        'rest_framework.filters.OrderingFilter', # Permet le tri via le paramètre 'ordering'
    ],
    'DEFAULT_RENDERER_CLASSES': [
        'rest_framework.renderers.JSONRenderer',      # Le format de réponse par défaut est JSON
        'rest_framework.renderers.BrowsableAPIRenderer', # Permet l'affichage d'une interface navigable dans le navigateur pour le débogage
    ],
    'EXCEPTION_HANDLER': 'rest_framework.views.exception_handler', # Utilise le gestionnaire d'erreurs par défaut de DRF
}

# REMOVED: Le signal post_save pour rest_framework.authtoken n'est plus nécessaire avec simplejwt.
# from django.db.models.signals import post_save
# from django.dispatch import receiver
# from django.conf import settings
# from rest_framework.authtoken.models import Token
# @receiver(post_save, sender=settings.AUTH_USER_MODEL)
# def create_auth_token(sender, instance=None, created=False, **kwargs):
#     if created:
#         Token.objects.get_or_create(user=instance)


# Configuration de Django REST Framework Simple JWT
from datetime import timedelta

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=60), # Durée de vie du token d'accès
    'REFRESH_TOKEN_LIFETIME': timedelta(days=1),   # Durée de vie du token de rafraîchissement
    'ROTATE_REFRESH_TOKENS': False,                 # Ne pas faire pivoter les tokens de rafraîchissement par défaut
    'BLACKLIST_AFTER_ROTATION': True,               # Mettre sur liste noire les anciens tokens de rafraîchissement après rotation
    'UPDATE_LAST_LOGIN': False,                     # Ne pas mettre à jour le champ last_login de l'utilisateur

    'ALGORITHM': 'HS256',                           # Algorithme de signature
    'SIGNING_KEY': SECRET_KEY,             # Clé secrète utilisée pour signer les tokens
    'VERIFYING_KEY': None,                          # Clé de vérification (None si la même que la clé de signature)
    'AUDIENCE': None,                               # Audience du token
    'ISSUER': None,                                 # Émetteur du token

    'AUTH_HEADER_TYPES': ('Bearer',),               # Type d'en-tête d'authentification (ex: Authorization: Bearer <token>)
    'AUTH_HEADER_NAME': 'HTTP_AUTHORIZATION',       # Nom de l'en-tête HTTP

    'USER_ID_FIELD': 'id',                          # Champ de l'utilisateur utilisé comme ID dans le token
    'USER_ID_CLAIM': 'user_id',                     # Nom de la revendication de l'ID utilisateur dans le token

    'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken',),
    'TOKEN_TYPE_CLAIM': 'token_type',

    'JTI_CLAIM': 'jti',                             # Identifiant unique du token JWT

    'SLIDING_TOKEN_LIFETIME': timedelta(minutes=5), # Durée de vie pour les tokens coulissants
    'SLIDING_TOKEN_REFRESH_LIFETIME': timedelta(days=1), # Durée de vie du rafraîchissement des tokens coulissants
}


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

AUTH_USER_MODEL = "users.User"
